version: '3.8'
services:
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: proyek3
      POSTGRES_PASSWORD: proyek3
      POSTGRES_DB: proyek3
    ports:
      - "5432:5432"
    networks:
      - default
    volumes:
      - ./.tmp/var/lib/postgresql/data:/var/lib/postgresql/data
      - ./postgres-database/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
  service-monitoring:
    image: service-monitoring
    build:
      context: ./service-monitoring
      target: production
      dockerfile: prod.Dockerfile
    ports:
      - "5001:5001"
    volumes:
      - ./service-monitoring:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - default
    depends_on:
      - db
  keycloak:
    image: quay.io/keycloak/keycloak:15.0.2
    environment:
      KEYCLOAK_USER: proyek3
      KEYCLOAK_PASSWORD: proyek3
      KEYCLOAK_FRONTEND_URL: http://localhost:14417/auth
      KEYCLOAK_IMPORT: /tmp/realm.json
      DB_VENDOR: postgres
      DB_ADDR: db
      DB_USER: proyek3
      DB_PASSWORD: proyek3
      DB_DATABASE: proyek3
      DB_SCHEMA: keycloak
      PROXY_ADDRESS_FORWARDING: 'true'
    ports:
      - "14417:8080"
    networks:
      - default
    volumes:
      - ./keycloak/realm-development.json:/tmp/realm.json:ro
  akun-keycloak-proxy:
    image: akun-keycloak-proxy
    build:
      context: ./akun-keycloak-proxy
      target: production
      dockerfile: prod.Dockerfile
    ports:
      - "14416:14416"
    volumes:
      - ./akun-keycloak-proxy:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - default
    depends_on:
      - db
